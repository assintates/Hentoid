apply plugin: 'com.android.application'

android {
    compileSdkVersion 27

    compileOptions {
        targetCompatibility JavaVersion.VERSION_1_8
        sourceCompatibility JavaVersion.VERSION_1_8
    }
    defaultConfig {
        applicationId "me.devsaki.hentoid"
        minSdkVersion 15
        // Hold updating targetSdkVersion until implementing an image viewer
        // or Perfect Viewer implements Content URI
        //noinspection OldTargetApi
        targetSdkVersion 23
        versionCode 47
        versionName '1.2.4'
        vectorDrawables.useSupportLibrary = true
    }

    flavorDimensions "buildType"
    productFlavors {
        dev {
            buildConfigField('String', 'UPDATE_URL',
                    '"https://avnet.ws/.apps/hentoid/debug/update.json"')
            def appId = "me.devsaki.hentoid.dev"
            resValue('string', 'app_id', appId)
            resValue('string', 'app_name', 'Hentoid-dev')
            applicationId appId
            dimension "buildType"
        }
        prod {
            buildConfigField('String', 'UPDATE_URL',
                    '"https://raw.githubusercontent.com/avluis/Hentoid/master/app/update.json"')
            def appId = android.defaultConfig.applicationId
            resValue('string', 'app_id', appId)
            resValue('string', 'app_name', 'Hentoid')
            applicationId appId
            dimension "buildType"
        }
    }
    signingConfigs {
        release
    }
    buildTypes {
        debug {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            versionNameSuffix "-DEBUG"
        }
        release {
            debuggable false
            minifyEnabled true

            signingConfig signingConfigs.release

            // Library specific proguard files
            proguardFiles fileTree(dir: '../.proguard', include: ['*.pro']).asList().toArray()

            // Default proguard files & project app specific rules
            proguardFile getDefaultProguardFile('proguard-android.txt')
            proguardFile 'proguard-project-app.pro'

            // As of Gradle Android plugin 1.1.0, the test APK has a separate config
            testProguardFile 'proguard-project-test.pro'
        }
    }
}

Properties props = new Properties()
def propFile = new File('.signing/signing.properties')
if (propFile.canRead()) {
    props.load(new FileInputStream(propFile))

    if (props != null && props.containsKey('STORE_FILE') && props.containsKey('STORE_PASSWORD')
            && props.containsKey('KEY_ALIAS') && props.containsKey('KEY_PASSWORD')) {
        android.signingConfigs.release.storeFile = file(props['STORE_FILE'])
        android.signingConfigs.release.storePassword = props['STORE_PASSWORD']
        android.signingConfigs.release.keyAlias = props['KEY_ALIAS']
        android.signingConfigs.release.keyPassword = props['KEY_PASSWORD']
    } else {
        println 'signing.properties found but some entries are missing'
        android.buildTypes.release.signingConfig = null
    }
} else {
    println 'signing.properties not found'
    android.buildTypes.release.signingConfig = null
}

dependencies {
    // Compile any included libraries
    compile fileTree(include: ['*jar'], dir: 'libs')

    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.1'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.1'

    // Support libraries
    implementation 'com.android.support:support-v13:27.0.2'
    implementation 'com.android.support:appcompat-v7:27.0.2'
    implementation 'com.android.support:cardview-v7:27.0.2'
    implementation 'com.android.support:design:27.0.2'

    // Image loader: github.com/bumptech/glide
    implementation 'com.github.bumptech.glide:glide:4.4.0'
    annotationProcessor 'com.github.bumptech.glide:compiler:4.4.0'
    implementation 'com.github.bumptech.glide:okhttp3-integration:4.4.0'

    // Intro screens or slides: https://github.com/apl-devs/AppIntro
    //implementation 'com.github.apl-devs:AppIntro:v4.2.2'
    implementation 'com.github.apl-devs:appintro:9d5d046037'

    // Google Play Services Analytics: developers.google.com/android/guides/setup
    implementation 'com.google.android.gms:play-services-analytics:11.8.0'

    // Java serialization/deserialization (Java Objects into JSON and back): github.com/google/gson
    implementation 'com.google.code.gson:gson:2.8.1'

    // Timber (Extensible Logger): github.com/JakeWharton/timber
    implementation 'com.jakewharton.timber:timber:4.5.1'

    // Download app updates (without user prompts): github.com/smanikandan14/ThinDownloadManager
    implementation 'com.mani:ThinDownloadManager:1.3.0'

    // HTTP & HTTP/2 client: github.com/square/okhttp
    implementation 'com.squareup.okhttp3:okhttp:3.9.1'

    // EventBus: github.com/greenrobot/EventBus
    implementation 'org.greenrobot:eventbus:3.0.0'

    // JSOUP HTML parser: jsoup.org/download
    implementation 'org.jsoup:jsoup:1.10.3'

    // RxAndroid (RxJava bindings for Android): github.com/ReactiveX/RxAndroid
    implementation 'io.reactivex:rxandroid:1.2.1'
    implementation 'io.reactivex:rxjava:1.3.4'

    //    https://github.com/aNNiMON/Lightweight-Stream-API
    implementation 'com.annimon:stream:1.1.9'

    // LeakCanary: https://github.com/square/leakcanary
    debugImplementation 'com.squareup.leakcanary:leakcanary-android:1.5.1'
    releaseImplementation 'com.squareup.leakcanary:leakcanary-android-no-op:1.5.1'
    testImplementation 'com.squareup.leakcanary:leakcanary-android-no-op:1.5.1'

    // https://mvnrepository.com/artifact/commons-io/commons-io
    compile 'commons-io:commons-io:2.6'
}

apply plugin: 'com.google.gms.google-services'
